version: '3.7'
services:
  nginx:
    image: nginx:1.17
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 8000:80
    depends_on:
      - backend
      - frontend

  redis:
    image: redis
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data

  postgres:
    image: postgres:12
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - '5432:5432'
    volumes:
      - db-data:/var/lib/postgresql/data:cached

  flower:  
    image: mher/flower
    command: celery --broker=redis://redis:6379/0 flower --port=5555
    ports:  
        - 5555:5555
    depends_on:
      - redis
      - worker

  worker:
    build:
      context: backend
      dockerfile: Dockerfile
    command: celery --app app.tasks worker --beat --loglevel=WARNING -Q main-queue -c 1
    tty: true
    volumes:
      - ./backend:/app/:cached
    depends_on:
      - redis
    
  backend:
    container_name: beo_backend
    build:
      context: backend
      dockerfile: Dockerfile
    command: python app/main.py
    tty: true
    volumes:
      - ./backend:/app/:cached
      - ./.docker/.ipython:/root/.ipython:cached
    ports:
      - 8888:8888
    environment:
      PYTHONPATH: .
      DATABASE_URI: "postgresql://postgres:password@postgres:5432/postgres"
      CELERY_BROKER: "redis://redis:6379/0"
      PORT: 8888
    depends_on:
      - postgres

  frontend:
    container_name: beo_frontend
    ports:
      - 3000:3000
    build:
      context: frontend
      dockerfile: Dockerfile
    stdin_open: true
    volumes:
      - './frontend:/app:cached'
      - './frontend/node_modules:/app/node_modules:cached'
    environment:
        NODE_ENV: "development"
        REACT_APP_API_BASE_PATH: "/api"
        REACT_APP_MODE: "development"


volumes:
  db-data:
  redis-data:
